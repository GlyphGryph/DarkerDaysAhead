Title: Suburban Prelude

Description: Enjoy a quaint day in suburbia. Surely, nothing could go wrong on such a beautiful day, especially for a person like yourself. Suddenly, the sirens begin to wail, and your humble abode is under assault from all sides! Can you survive?

Goal: A small, static map the player can move around and fight monsters that spawn while trying to survive

✓ = insert->ctrl-v + u2713

Tasks:
✓- Local World (single screen), initially blank
✓- Character
✓- Player Driven Movement of Character
  ✓- Detect movement keypresses
  ✓- Player can move cardinal
  ✓- Player cannot move past edge of map
  ✓- Player can move diagonal
  ✓- Player starts on map
✓- Kreks spawn from edges of map
  ✓- Spawn in a specific square
  ✓- Spawn in a random unoccupied square alone the edge
  ✓- Spawned Manually with a keypress, not a timing issue
  ✓- Make sure only the player character moves
✓- If player moves onto Krek, game over
  ✓- Resets the grid
  ✓- Displays "You died. Starting new game." message
✓- Kreks move around randomly
  ✓- Implement time progression (every time a player moves, process time events)
  ✓- Specifically, implement an "turn order" populated by spawned creatures
  ✓- Process turns until it is the player's turn then return to normal app control
  ✓- When a creature takes a turn, move them to the end of the turn queu
  ✓- On a Krek's turn, have the Krek move in a random direction
  ✓- If Krek moves on to player, game over
  ✓- BUGFIX: Figure out why Players don't get to all their turns
✓- Control more than one character
  ✓- Different keys for spawning enemies and allies
  ✓- Modify the control character logic so multiple can be controlled
  ✓- If not already done, make sure creatures know they are explicitly controlled
  ✓- Make sure that when the player takes an action it goes to the correct character
✓- Game over when all player characters die instead of first touch
  ✓- Instead of touching a player character be a game over, remove them from the map
  ✓- Game over only when all of them are removed
  ✓- Do not actually move the character doing the touching
  ✓- Describe it as an "attack" instead
✓- Player can 'wait' for enemies, enemies can 'wait'
✓- Enemies move "towards" player when possible
  ✓- When units of an enemy faction exist, they find the closest
  ✓- They then move directly towards the closest (no pathing)
  ✓- They 'wait' when they cannot find a valid enemy
✓- Highlight currently active player character
✓- Add "terrain" of various sorts, nonfunctional
✓- Blocking terrain prevent player from moving onto that space (blocking)
✓- Add "boundary zones" that can display walls and triggers
  ✓- This is big and important!
  ✓- Put places between normal squares for boundaries to exist
  ✓- Add and display walls in those boundary zones
  ✓- Players cannot move between cells that have blocking walls between them
  ✓- L shaped walls should not allow players to move (via corner blocks)
✓- Fix bug with players able to go out of map
✓- Performance improved for map rendering
  ✓- Make sure cells only rerender when they change
  ✓- Don't worry too much - eventually this will all be moving to Canvas!
✓- Performance improved for map rendering 2
  ✓- Use perf testing!
  ✓- Map only rerenders things that REALLY change.
 - Z-levels
  ✓- multiple levels (3)
  ✓- characters can switch between levels with a keypress (fly mode)
 - Z-levels Part 2
   - There is a difference between spaces with floors and spaces without.
   - Players can only move vertically when there is no "floor" blocking them
   - Toggle "fly mode" on character, store whether or not character is flying
   - Non-flying plus no floor drops the player to the z-level below
   - Have ladders spawn in the same x/y position on two adjacent levels, as walls
   - Standing next to a ladder allows a player to move up/down as if flying
   - Drops can be chained, allowing player to drop several z-levels
   - For ease of coding, consider storing neighbour-id for cells.
     - Neighbours include cells next to, above, below, diagonal!
 - Z-levels Part 3
   - Break z-levels into "thirds". Characters are 3 levels tall.
   - Players can move up neighboring z-levels that are only 1 level higher
   - This is sometimes required to move off ladders
   - Characters can switch between distance levels by moving horizontally along "stairs"
   - Actually display the z-levels in a final usable form, overlayed and filtered somehow
 - AI improvements: Line of sight
   - Enemies will actually follow across levels if they can see you, otherwise wander randomly
   - Only works on same z-levels
   - Blocked by walls
   - Enemies have "hunting patterns" that make them explore better than a random walk
 - Status effects (crippled)
   - Enemies falling through floor holes are crippled
 - Crippled enemies skip their next several turns
 - If falling 2 levels, they are killed instead.
 - Add "soft terrain.
   - If falling onto soft terrain, damage reduced by one level
          (killed -> crippled, crippled -> unhurt)
 - Enemies leave corpses, which count as soft terrain
 - Performance improved for map rendering 3
    - Map only renders anything at beginning of players turn
    - Map STILL only renders things that changed
 - Inventory, the ability to pick up and put down an item
 - Items spawn randomly around map as time progresses
 - Instead of dying to crippled enemies, kill them if you have a weapon
 - Can move enemy corpses
 - Furniture. You can move it around! Close and open doors and curtains too.
 - Enemies can bash down doors and break through windows
 - Player can use supplies to fix doors and board up windows and cover holes.
 - Enemies will not move over holes in the floor they can see
   - Have to be "covered" or behind furniture/windows or otherwise obscured
   - Enemies breaking open doors move into the space on the other side, fall through hole
   - Some enemies "charge" in which case doors can be opened and they will still fall in
 - Player can make their own holes in the floor with tools.
 - Move creature definitions into their own area
 - Allow support for an additional creature type, with its own different AI behaviour
 - Final touches - Add enemy variety, constrain spawn events, develop escalation
 - It's time - switch to canvas rendering! Otherwise this will all be super slos
